{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Popper from 'popper.js';\nimport ClickOutside from 'vue-click-outside'; // @vue/component\n\nexport default {\n  props: {\n    boundariesElement: {\n      type: String,\n      default: 'body'\n    }\n  },\n  components: {\n    Popper\n  },\n\n  data() {\n    return {\n      opened: false,\n      contextData: {}\n    };\n  },\n\n  directives: {\n    ClickOutside\n  },\n  computed: {\n    isVisible() {\n      return this.opened;\n    }\n\n  },\n  methods: {\n    open(evt, contextData) {\n      this.opened = true;\n      this.contextData = contextData;\n\n      if (this.popper) {\n        this.popper.destroy();\n      }\n\n      this.popper = new Popper(this.referenceObject(evt), this.$refs.popper, {\n        placement: 'right-start',\n        modifiers: {\n          preventOverflow: {\n            boundariesElement: document.querySelector(this.boundariesElement)\n          }\n        }\n      }); // Recalculate position\n\n      this.$nextTick(() => {\n        this.popper.scheduleUpdate();\n      });\n    },\n\n    close() {\n      this.opened = false;\n      this.contextData = null;\n    },\n\n    referenceObject(evt) {\n      const left = evt.clientX;\n      const top = evt.clientY;\n      const right = left + 1;\n      const bottom = top + 1;\n      const clientWidth = 1;\n      const clientHeight = 1;\n\n      function getBoundingClientRect() {\n        return {\n          left,\n          top,\n          right,\n          bottom\n        };\n      }\n\n      const obj = {\n        getBoundingClientRect,\n        clientWidth,\n        clientHeight\n      };\n      return obj;\n    }\n\n  },\n\n  beforeDestroy() {\n    if (this.popper !== undefined) {\n      this.popper.destroy();\n    }\n  }\n\n};","map":null,"metadata":{},"sourceType":"module"}